syntax = "proto3";

package browser;

service BrowserSign {
 /** `remote`: `signmessage`
    SignMessage signs a message with this user's private key. The returned
    signature string is `base64` encoded and pubkey recoverable, meaning that
    only the message digest and signature are needed for verification.
    */
    rpc SignMessage (SignMessageRequest) returns (SignMessageResponse);

 /** `remote`: `signmessage`
    SignMessage signs a message with this user's private key. The returned
    signature string is `base64` encoded and pubkey recoverable, meaning that
    only the message digest and signature are needed for verification.
    */
    rpc SignCompact (SignMessageRequest) returns (SignCompactResponse);
}

// from lnd's rpc.proto:
message SignMessageRequest {
    /// The message to be signed
    bytes msg = 1 [ json_name = "msg" ];
    string type = 2 [ json_name = "type" ];
}
message SignMessageResponse {
    /// The signature for the given message
    string signature = 1 [ json_name = "signature" ];
}

message SignCompactResponse {
    /// The compacted signature for the given message
    string signature = 1 [ json_name = "signature" ];
}
